{"version":3,"sources":["App.js","index.js","help.js"],"names":["App","state","start","counter","level","questions","default","temp","handleQuiz","e","preventDefault","target","disabled","Data","getReport","then","res","file","Blob","type","fileURL","URL","createObjectURL","window","open","catch","err","console","log","location","reload","c","this","intervalID","setInterval","setState","clearInterval","handleRadio","q","name","value","onSubmit","getData","data","onChange","id","map","d","i","o1","o2","o3","o4","Component","ReactDOM","render","StrictMode","document","getElementById","link","module","exports","fetch","method","headers","body","JSON","stringify","json","blob"],"mappings":"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","file":"static/js/main.87605f38.chunk.js","sourcesContent":["import React , {  PureComponent as Component}from 'react'\nimport {getData , getReport} from './help'\n\n\nclass App  extends Component {\n \n  state = { start : true ,counter : 30,level : \"easy\",questions : {},default : true} \n  temp = {}\n\n  componentDidMount() {\n     let c = 0;\n     \n     this.intervalID = setInterval(\n     () => {\n       \n        if(!this.state.start && this.state.counter >= 1 && c === 0)\n         {\n            c = c+1;\n            this.setState({ counter : this.state.counter - 1},() => {\n               c = c-1;\n            })\n         }\n         else if(this.state.counter <= 0)\n         {\n            this.handleQuiz();\n            clearInterval(this.intervalID);\n         }\n     },\n     1000\n   );\n }\n   componentWillUnmount() {\n   clearInterval(this.intervalID);\n }\n\n componentDidUpdate()\n {\n    \n    if(this.state.default)\n     {\n        this.setState({ questions : {...this.temp}, default : false})\n     }\n }\n  handleQuiz = e => {\n         \n  if(e)\n  {       \n   e.preventDefault();\n   e.target.disabled = true; }\n   const { questions : Data} = this.state;\n   getReport(Data)\n   .then(res => {\n      const file = new Blob([res], {\n         type: \"text/html\"\n       });\n       const fileURL = URL.createObjectURL(file);\n       window.open(fileURL);\n   })\n   .catch(err => {\n      console.log(\"Error1 : \",err);\n   })   \n   window.location.reload() \n\n}\n\n\n  render()\n   {\n      const handleSubmit = e => {\n          e.preventDefault();\n          getData(this.state.level)\n          .then(res => {\n              this.setState({ data : res, start :  false })\n          })\n          .catch(err => {\n             console.log(\"LEVEL ERROR : \",err)\n          })\n      }\n\n     \n      const handleRadio = e => {\n        \n         let q = { ...this.state.questions , [e.target.name] : e.target.value}\n        \n         this.setState({ questions : {...q} });\n      }\n\n\n      return (<div>\n              {  this.state.start && <form onSubmit={handleSubmit}>\n                 <label >Level : </label>\n                 <select onChange={ e => { this.setState({ level : e.target.value }) }} >\n                    <option value={\"easy\"} >Easy</option>\n                    <option value={\"medium\"}>Medium</option>\n                    <option value={\"hard\"}>Difficult</option>\n                 </select>\n                 <br/> <br/>\n                 <input type=\"submit\" value=\"Start Test\" /> \n              </form>}\n              {\n                 !this.state.start && \n                 <div>\n                   \n                    {   \n                       this.state.counter }\n                  <form onSubmit={this.handleQuiz} id=\"myForm\" >\n                     { \n                       this.state.data.map( (d,i) => {\n                          this.temp ={...this.temp,[d.id] : \"NA\"} \n                          return (\n                             <div key={d.id}>\n                             <label>{d.q}</label><br/>\n                             <input type=\"radio\" value={d.o1} name={d.id} onChange={handleRadio} />{d.o1}\n                             <input type=\"radio\" value={d.o2}  name={d.id} onChange={handleRadio} />{d.o2}\n                             <input type=\"radio\" value={d.o3}  name={d.id} onChange={handleRadio} />{d.o3}\n                             <input type=\"radio\" value={d.o4}  name={d.id} onChange={handleRadio} />{d.o4}\n                             </div>\n                          )\n                       })\n                       \n                     }\n                    <br/>\n                  \n                     <input type=\"submit\" value=\"Submit test\" />\n                  </form>\n                  </div>\n              }\n          </div>);\n   }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","const link = 'http://localhost:5000'\r\n\r\nconst getData =  level => {\r\n    return fetch(`${link}/getQuestions`,{\r\n         method : \"POST\",\r\n         headers : {\r\n             \"Content-Type\" : \"application/json\"\r\n         },\r\n         body : JSON.stringify({ level })\r\n    })\r\n    .then( res => res.json())\r\n    .then( err => err)\r\n}\r\n\r\nconst getReport = data => {\r\n     \r\n    return fetch(`${link}/getReport`,{\r\n        method : \"POST\",\r\n        body : JSON.stringify(data),\r\n        headers : {\r\n            \"Content-Type\" : \"application/json\"\r\n        }\r\n    })\r\n    .then(res => res.blob())\r\n    .catch(err => err);\r\n}\r\n\r\nmodule.exports = { getData,getReport} ;"],"sourceRoot":""}